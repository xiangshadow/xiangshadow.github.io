<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>&amp;ensp;&amp;emsp;静觅</title>
  
  <subtitle>翔的个人网站</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.gaoxiangxiang.cn/"/>
  <updated>2018-09-12T03:31:44.107Z</updated>
  <id>http://www.gaoxiangxiang.cn/</id>
  
  <author>
    <name>翔</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>scrapy框架自定义pipeline</title>
    <link href="http://www.gaoxiangxiang.cn/2018/09/06/test1/"/>
    <id>http://www.gaoxiangxiang.cn/2018/09/06/test1/</id>
    <published>2018-09-06T03:31:01.000Z</published>
    <updated>2018-09-12T03:31:44.107Z</updated>
    
    <content type="html"><![CDATA[<h3 id="自定义pipeline"><a href="#自定义pipeline" class="headerlink" title="自定义pipeline"></a>自定义pipeline</h3><p>首先,需要我们在pipeline.py文件中自定义.需要注意的是自定义的每一个pipeline必须是一个独立的Python类,也就是继承于object.就可以定义pipeline类,定义自己想要使用的储存方法.</p><a id="more"></a><h3 id="演示保存为csv"><a href="#演示保存为csv" class="headerlink" title="演示保存为csv"></a>演示保存为csv</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NovelSpiderCsvPipeline</span>(<span class="title">object</span>):</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">open_spider</span><span class="params">(<span class="keyword">self</span>,spider)</span></span><span class="symbol">:</span></span><br><span class="line">            <span class="keyword">self</span>.f=open(<span class="string">'novel,csv'</span>,<span class="string">'w'</span>,encoding=<span class="string">'utf-8'</span>,newline=<span class="string">''</span>)</span><br><span class="line">            <span class="keyword">self</span>.writer=csv.DictWriter(<span class="keyword">self</span>.f,fieldnames=[<span class="string">"novel_name"</span>,<span class="string">"novel_info"</span>,<span class="string">"novel_type"</span>,<span class="string">"novel_author"</span>])</span><br><span class="line">            <span class="keyword">self</span>.writer.writeheader()</span><br><span class="line">    </span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">process_item</span><span class="params">(<span class="keyword">self</span>,item,spider)</span></span><span class="symbol">:</span></span><br><span class="line">            item_dict=dict(item)</span><br><span class="line">            <span class="keyword">self</span>.writer.writerow(item_dict)</span><br><span class="line">            <span class="keyword">return</span> item</span><br><span class="line">    </span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">close_spider</span><span class="params">(<span class="keyword">self</span>,spider)</span></span><span class="symbol">:</span></span><br><span class="line">            <span class="keyword">self</span>.f.close()</span><br></pre></td></tr></table></figure><p>然后在pipeline写好代码之后,不是就完成了,还有一些步骤要做.自定义的pipeline必须在settings中的ITEM_PIPELINES里面启用,否则该pipeline不会生效<br><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">ITEM_PIPELINES</span> = &#123;<span class="string">'NovelSpider.pipelines.NovelSpiderCsvPipeline'</span>: <span class="number">301</span>&#125;</span><br></pre></td></tr></table></figure></p><p>最后运行就可以了</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;自定义pipeline&quot;&gt;&lt;a href=&quot;#自定义pipeline&quot; class=&quot;headerlink&quot; title=&quot;自定义pipeline&quot;&gt;&lt;/a&gt;自定义pipeline&lt;/h3&gt;&lt;p&gt;首先,需要我们在pipeline.py文件中自定义.需要注意的是自定义的每一个pipeline必须是一个独立的Python类,也就是继承于object.就可以定义pipeline类,定义自己想要使用的储存方法.&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>随感</title>
    <link href="http://www.gaoxiangxiang.cn/2018/09/06/test/"/>
    <id>http://www.gaoxiangxiang.cn/2018/09/06/test/</id>
    <published>2018-09-06T01:40:28.000Z</published>
    <updated>2018-09-12T03:31:27.691Z</updated>
    
    <content type="html"><![CDATA[<p>欢迎光临个人网站</p><a id="more"></a><p>现在还在学习建设中,</p><p>先随便写一些东西测试一下</p><p>慢慢摸索中</p><p>我相信</p><p>以后会越来越好</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;欢迎光临个人网站&lt;/p&gt;
    
    </summary>
    
    
      <category term="notes" scheme="http://www.gaoxiangxiang.cn/tags/notes/"/>
    
  </entry>
  
  <entry>
    <title>装了Chorme不用这个扩展,还不如去用IE6</title>
    <link href="http://www.gaoxiangxiang.cn/2018/09/06/a/"/>
    <id>http://www.gaoxiangxiang.cn/2018/09/06/a/</id>
    <published>2018-09-06T01:40:28.000Z</published>
    <updated>2018-09-12T03:29:25.686Z</updated>
    
    <content type="html"><![CDATA[<p>这年头神器这个词已经烂大街了，但是，油猴的确配得上这个词，如果让我选择 Chrome 浏览器上只能保留一个扩展，那必须是油猴插件！这是一个可以提升上网幸福感的神级工具！<br>说的这么邪乎？那我来告诉你这只油猴子都能干些什么吧。简单粗暴，直接上图！</p><a id="more"></a><p>………..<br>好吧,现在还不能上图…<br>那就简单来讲讲吧,大致来说能干的事情非常的多,比如能看VIP视频、能下知网论文、磁链在线看、网盘免输密……<br>等等,还有很多你想不到的功能.<br>这么逆天的神器到底是个什么东西？它其实是一个脚本管理器，可以为你的浏览器加载各种各样有趣、实用、脑洞大开的脚本，对你正在访问的指定网站按照你的需求进行修改，从而让你的浏览器前所未有地强大。<br>这款插件除了适用于 Chrome ,还支持 Microsoft Edge，Safari，Opera ，Firefox，以及使用 Chromium 内核的国产浏览器（比如QQ、猎豹、360、百度等），在 <a href="http://tampermonkey.net" target="_blank" rel="noopener">http://tampermonkey.net</a> 这里你可以找到对应的油猴版本下载。我个人比较喜欢用Chrome,所以就以Chrome 为例讲解啦。</p><p>先安装油猴插件，最新版本号是4.4——</p><p>1、可以科学上网的同学建议在线安装，去谷歌商店搜索 Tampermonkey 下载安装。</p><p>2、如果没有科学上网的条件，可以去 <a href="http://www.crx4chrome.com/crx/755/" target="_blank" rel="noopener">www.crx4chrome.com/crx/755/</a> 下载到本地，然后离线安装。顺便提一句，crx4chrome 这个站可以无需科学上网就能下载到最新版本的 Chrome 扩展，建议收藏。</p><p>安装成功之后，你会在 Chrome 的扩展栏看到一个黑色图标，证明油猴已经安装成功。</p><p>安装就这么简单，那这时候是不是就可以使用上边的那些神奇功能呢？</p><p>还不行，安装好油猴插件相当于你手里有了一把枪，还要有子弹才能发挥枪的威力。</p><p>再送你一个丰富的弹药库，<a href="https://greasyfork.org/zh-CN/scripts，长枪短炮，应有尽有，刚才那些功能强大的脚本都来自于这个网站。" target="_blank" rel="noopener">https://greasyfork.org/zh-CN/scripts，长枪短炮，应有尽有，刚才那些功能强大的脚本都来自于这个网站。</a></p><p>油猴上好玩好用的脚本实在是太多了，大家可以去自己慢慢淘，总有一款适合自己.</p><p>ps(现在还不会上截图…)</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这年头神器这个词已经烂大街了，但是，油猴的确配得上这个词，如果让我选择 Chrome 浏览器上只能保留一个扩展，那必须是油猴插件！这是一个可以提升上网幸福感的神级工具！&lt;br&gt;说的这么邪乎？那我来告诉你这只油猴子都能干些什么吧。简单粗暴，直接上图！&lt;/p&gt;
    
    </summary>
    
    
      <category term="notes" scheme="http://www.gaoxiangxiang.cn/tags/notes/"/>
    
  </entry>
  
</feed>
